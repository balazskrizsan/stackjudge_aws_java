/*
 * This file is generated by jOOQ.
 */
package com.kbalazsworks.stackjudge_aws.db.tables.records;


import com.kbalazsworks.stackjudge_aws.db.tables.RemoteFiles;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RemoteFilesRecord extends TableRecordImpl<RemoteFilesRecord> implements Record5<String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.remote_files.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.remote_files.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.remote_files.path</code>.
     */
    public void setPath(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.remote_files.path</code>.
     */
    public String getPath() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.remote_files.filename</code>.
     */
    public void setFilename(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.remote_files.filename</code>.
     */
    public String getFilename() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.remote_files.s3_e_tag</code>.
     */
    public void setS3ETag(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.remote_files.s3_e_tag</code>.
     */
    public String getS3ETag() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.remote_files.s3_content_md5</code>.
     */
    public void setS3ContentMd5(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.remote_files.s3_content_md5</code>.
     */
    public String getS3ContentMd5() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RemoteFiles.REMOTE_FILES.ID;
    }

    @Override
    public Field<String> field2() {
        return RemoteFiles.REMOTE_FILES.PATH;
    }

    @Override
    public Field<String> field3() {
        return RemoteFiles.REMOTE_FILES.FILENAME;
    }

    @Override
    public Field<String> field4() {
        return RemoteFiles.REMOTE_FILES.S3_E_TAG;
    }

    @Override
    public Field<String> field5() {
        return RemoteFiles.REMOTE_FILES.S3_CONTENT_MD5;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPath();
    }

    @Override
    public String component3() {
        return getFilename();
    }

    @Override
    public String component4() {
        return getS3ETag();
    }

    @Override
    public String component5() {
        return getS3ContentMd5();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPath();
    }

    @Override
    public String value3() {
        return getFilename();
    }

    @Override
    public String value4() {
        return getS3ETag();
    }

    @Override
    public String value5() {
        return getS3ContentMd5();
    }

    @Override
    public RemoteFilesRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public RemoteFilesRecord value2(String value) {
        setPath(value);
        return this;
    }

    @Override
    public RemoteFilesRecord value3(String value) {
        setFilename(value);
        return this;
    }

    @Override
    public RemoteFilesRecord value4(String value) {
        setS3ETag(value);
        return this;
    }

    @Override
    public RemoteFilesRecord value5(String value) {
        setS3ContentMd5(value);
        return this;
    }

    @Override
    public RemoteFilesRecord values(String value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RemoteFilesRecord
     */
    public RemoteFilesRecord() {
        super(RemoteFiles.REMOTE_FILES);
    }

    /**
     * Create a detached, initialised RemoteFilesRecord
     */
    public RemoteFilesRecord(String id, String path, String filename, String s3ETag, String s3ContentMd5) {
        super(RemoteFiles.REMOTE_FILES);

        setId(id);
        setPath(path);
        setFilename(filename);
        setS3ETag(s3ETag);
        setS3ContentMd5(s3ContentMd5);
    }
}
